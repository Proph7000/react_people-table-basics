{"version":3,"sources":["components/PageNavLink/pageNavLink.tsx","components/Nav/Nav.tsx","api.ts","components/Loader/Loader.tsx","components/PersonInfo/PersonLink.tsx","components/PersonInfo/personInfo.tsx","components/PersonTable/personTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Nav","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","catch","Error","Loader","PersonLink","slug","sex","PersonInfo","person","name","born","died","mother","motherName","father","fatherName","PersonTable","selectedPerson","useState","people","setPeople","isError","setIsError","isLoading","setIsLoading","getParents","peopleFromServer","map","child","childFather","find","childMother","loadPeople","loadedPeole","table","length","errorOrTable","useEffect","PeoplePage","useParams","personSlug","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9b3f2ae1.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      {\n        'has-background-grey-lighter': isActive,\n      },\n    )}\n  >\n    { text }\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Nav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json())\n    .catch(() => ({\n      Error: 'Unexpected error',\n    }));\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  slug: string,\n  text: string,\n  sex: 'f' | 'm',\n};\n\nexport const PersonLink: FC<Props> = ({ slug, text, sex }) => (\n  <Link\n    to={`/people/${slug}`}\n    className={classNames(\n      {\n        'has-text-danger': sex === 'f',\n      },\n    )}\n  >\n    {text}\n  </Link>\n);\n","import { Person } from '../../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => (\n  <>\n    <td>\n      <PersonLink slug={person.slug} text={person.name} sex={person.sex} />\n    </td>\n\n    <td>\n      { person.sex }\n    </td>\n\n    <td>\n      { person.born }\n    </td>\n\n    <td>\n      { person.died }\n    </td>\n\n    <td>\n      { person.mother ? (\n        <PersonLink\n          slug={person.mother.slug}\n          text={person.mother.name}\n          sex={person.mother.sex}\n        />\n      ) : (\n        person.motherName\n      ) }\n    </td>\n\n    <td>\n      { person.father ? (\n        <PersonLink\n          slug={person.father.slug}\n          text={person.father.name}\n          sex={person.father.sex}\n        />\n      ) : (\n        person.fatherName\n      ) }\n    </td>\n  </>\n);\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonInfo } from '../PersonInfo';\n\ntype Props = {\n  selectedPerson: string;\n};\n\nexport const PersonTable: React.FC<Props> = ({ selectedPerson = '' }) => {\n  const [people, setPeople] = useState<Person[] | undefined>();\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getParents = (peopleFromServer: Person[]) => {\n    return peopleFromServer.map(child => {\n      const childFather = peopleFromServer.find(\n        father => father.name === child.fatherName,\n      );\n\n      const childMother = peopleFromServer.find(\n        mother => mother.name === child.motherName,\n      );\n\n      const fatherName = child.fatherName ? child.fatherName : '-';\n      const motherName = child.motherName ? child.motherName : '-';\n\n      return {\n        ...child,\n        father: childFather,\n        mother: childMother,\n        fatherName,\n        motherName,\n      };\n    });\n  };\n\n  const loadPeople = async () => {\n    setIsError(false);\n    setIsLoading(true);\n    const loadedPeole = await getPeople();\n\n    try {\n      if ('Error' in loadedPeole) {\n        throw new Error();\n      }\n\n      setPeople(getParents(loadedPeole));\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const table = people?.length ? (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people?.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames(\n              {\n                'has-background-warning': selectedPerson === person.slug,\n              },\n            )}\n          >\n            <PersonInfo person={person} />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  ) : (\n    <p data-cy=\"noPeopleMessage\">\n      There are no people on the server\n    </p>\n  );\n\n  const errorOrTable = isError ? (\n    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n      Something went wrong\n    </p>\n  ) : (\n    table\n  );\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        { isLoading ? <Loader /> : errorOrTable }\n      </div>\n    </div>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { PersonTable } from '../components/PersonTable';\n\nexport const PeoplePage = () => {\n  const { personSlug = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PersonTable selectedPerson={personSlug} />\n    </>\n  );\n};\n","import {\n  Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { Nav } from './components/Nav';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Nav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":personSlug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}